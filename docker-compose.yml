version: "3"
services:
  # BLUE ORIGIN
  weather:
    build: ./team-j-weather-ws
    container_name: team-j-blue-galactic-weather
    ports:
      - "8060:8060"
      - "8061:8061"
  rocket:
    build: ./team-j-rocket-ws
    container_name: team-j-blue-galactic-rocket
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - telemetry
      - mission
      - schema-registry
      - broker
      - booster

  mission:
    build: ./team-j-mission-ws
    container_name: team-j-blue-galactic-mission
    ports:
      - "8070:8070"
      - "8071:8071"
    depends_on:
      - schema-registry
      - broker

  telemetry-database:
    image: mongo:latest
    volumes:
      - ./database:/data
    container_name: team-j-blue-galactic-telemetry-database
    ports:
      - 27017:27017

  telemetry:
    build: ./team-j-telemetry-ws
    container_name: team-j-blue-galactic-telemetry
    ports:
      - "8090:8090"
      - "8091:8091"
    links:
      - telemetry-database

  payload:
    build: ./team-j-payload-ws
    container_name: team-j-blue-galactic-payload
    ports:
      - "8050:8050"
      - "8051:8051"
  booster:
    build: ./team-j-booster-ws
    container_name: team-j-blue-galactic-booster
    ports:
      - "8030:8030"
      - "8031:8031"

  # KAFKA
  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "9091:9091"
    environment:
      ZOOKEEPER_CLIENT_PORT: 9091
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:6.0.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:9091"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,CONNECTIONS_FROM_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT

  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - broker
    ports:
      - "9090:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:9091"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker:9092"

  kafka-setup:
    image: confluentinc/cp-kafka:6.0.0
    hostname: setup
    container_name: setup
    depends_on:
      - broker
      - schema-registry
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b broker:9092 1 20 && \
      kafka-topics --create --if-not-exists --zookeeper zookeeper:9091 --partitions 1 --replication-factor 1 --topic mission && \
      kafka-topics --create --if-not-exists --zookeeper zookeeper:9091 --partitions 1 --replication-factor 1 --topic test \
      '"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
